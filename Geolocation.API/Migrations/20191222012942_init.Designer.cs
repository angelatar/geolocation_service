// <auto-generated />
using System;
using System.Net;
using Geolocation.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Geolocation.API.Migrations
{
    [DbContext(typeof(GeoContext))]
    [Migration("20191222012942_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Geolocation.Main.Entities.Block", b =>
                {
                    b.Property<IPAddress>("Network")
                        .HasColumnType("inet");

                    b.Property<long?>("GeonameId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAnonymousProxy")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSatelliteProvider")
                        .HasColumnType("boolean");

                    b.Property<long?>("RegisteredCountryGeonameId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RepresentedCountryGeonameId")
                        .HasColumnType("bigint");

                    b.HasKey("Network");

                    b.ToTable("Blocks","public");
                });

            modelBuilder.Entity("Geolocation.Main.Entities.Location", b =>
                {
                    b.Property<long>("GeonameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ContinentCode")
                        .HasColumnType("text");

                    b.Property<string>("ContinentName")
                        .HasColumnType("text");

                    b.Property<string>("CountryIsoCode")
                        .HasColumnType("text");

                    b.Property<string>("CountryName")
                        .HasColumnType("text");

                    b.Property<bool>("IsInEuropeanUnion")
                        .HasColumnType("boolean");

                    b.Property<string>("LocalCode")
                        .HasColumnType("text");

                    b.HasKey("GeonameId");

                    b.ToTable("Locations","public");
                });
#pragma warning restore 612, 618
        }
    }
}
